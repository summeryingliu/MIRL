install.packages(('mice'))
library(MIRL)
source('~/Rcreation/MIRL/MIRL/R/bestthr.R')
library(MIRL)
library(MIRL)
library(MIRL)
library(MIRL)
cor=0.6
prob=0.02
p=20
n=100 #sample size
Sigma=matrix(cor,p,p)#correlation of predictors
diag(Sigma)=1
mu=numeric(p)
set.seed(3)
#C is the complete design matrix without missing
C=mvrnorm(n,mu,Sigma)
#The missing indicator matrix
A<-matrix(rbinom(n*p,size=1,prob),n,p)
A[,c(1,4,6)]=0 #columns without missing
p1=inv.logit(C[,1]+C[,6]-2)
A[,5]=rbinom(n,size=1,p1) #Missing at Random
p2=inv.logit(-C[,1]-0.5*C[,6]-2)
A[,10]=rbinom(n,size=1,p2)
p3=inv.logit(C[,4]-2)
A[,9]=rbinom(n,size=1,p3)
beta=numeric(p)
beta[1:10]=c(0.1,0.2,0.3,0.4,0.5,-0.1,-0.2,-0.3,-.4,-0.5)
ct=c(0,beta)
#generating Y
Y=C\%*\%beta+rnorm(n)
C=cbind(C,Y)
s=rep('X',p)
s=paste(s,1:p,sep='')
s=c(s,'Y')
B=C
B[A==1]=NA
Y=C%*%beta+rnorm(n)
fit<-mirl(B,Y,p/2,im=5)
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
fit<-mirl(B,Y,p/2,im=5)
cbind(fit$coef,fit$Probability)
fit$coef
fit
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
fit<-mirl(B,Y,p/2,im=5)
fit$Probability
dim(fit$Probability)
length(fit$Probability)
length(fit$coef)
best<-threshold(B,Y,p/2,3,thr=c(0.75,0.85))
source('~/Rcreation/MIRL/MIRL/R/bestthr.R')
best<-threshold(B,Y,p/2,3,thr=c(0.75,0.85))
source('~/Rcreation/MIRL/MIRL/R/bestthr.R')
best<-threshold(B,Y,p/2,3,thr=c(0.75,0.85))
rep(1,3)
source('~/Rcreation/MIRL/MIRL/R/bestthr.R')
best<-threshold(B,Y,p/2,3,thr=c(0.75,0.85))
library(MIRL)
library(MIRL)
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
cor=0.6
prob=0.02
p=10
n=50 #sample size
Sigma=matrix(cor,p,p)#correlation of predictors
diag(Sigma)=1
mu=numeric(p)
set.seed(3)
#C is the complete design matrix without missing
C=mvrnorm(n,mu,Sigma)
#The missing indicator matrix
A<-matrix(rbinom(n*p,size=1,prob),n,p)
A[,c(1,4,6)]=0 #columns without missing
p1=inv.logit(C[,1]+C[,6]-2)
A[,5]=rbinom(n,size=1,p1) #Missing at Random
p2=inv.logit(-C[,1]-0.5*C[,6]-2)
A[,10]=rbinom(n,size=1,p2)
p3=inv.logit(C[,4]-2)
A[,9]=rbinom(n,size=1,p3)
beta=numeric(p)
beta[1:6]=c(0.1,0.2,0.5,-0.3,-.4,-0.5)*5
ct=c(0,beta)
Y=C%*%beta+rnorm(n)
C=cbind(C,Y)
s=rep('X',p)
s=paste(s,1:p,sep='')
s=c(s,'Y')
B=C
B[A==1]=NA
fit<-mirl(B,Y,p/2,im=5)
cor=0.6
prob=0.02
p=10
n=200 #sample size
Sigma=matrix(cor,p,p)#correlation of predictors
diag(Sigma)=1
mu=numeric(p)
set.seed(3)
#C is the complete design matrix without missing
C=mvrnorm(n,mu,Sigma)
#The missing indicator matrix
A<-matrix(rbinom(n*p,size=1,prob),n,p)
A[,c(1,4,6)]=0 #columns without missing
p1=inv.logit(C[,1]+C[,6]-2)
A[,5]=rbinom(n,size=1,p1) #Missing at Random
p2=inv.logit(-C[,1]-0.5*C[,6]-2)
A[,10]=rbinom(n,size=1,p2)
p3=inv.logit(C[,4]-2)
A[,9]=rbinom(n,size=1,p3)
beta=numeric(p)
beta[1:6]=c(0.1,0.2,0.5,-0.3,-.4,-0.5)*5
ct=c(0,beta)
#generating Y
Y=C\%*\%beta+rnorm(n)
C=cbind(C,Y)
s=rep('X',p)
s=paste(s,1:p,sep='')
s=c(s,'Y')
B=C
B[A==1]=NA
Y=C%*%beta+rnorm(n)
B=C
B[A==1]=NA
fit<-mirl(B,Y,p/2,im=5)
cbind(fit$coef,fit$Probability)
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
library(MIRL)
library(MIRL)
library(MIRL)
A<-matrix(rbinom(n*p,size=1,prob),n,p)
A[,c(1,4,6)]=0 #columns without missing
p1=inv.logit(C[,1]+C[,6]-2)
A[,5]=rbinom(n,size=1,p1) #Missing at Random
p2=inv.logit(-C[,1]-0.5*C[,6]-2)
A[,10]=rbinom(n,size=1,p2)
p3=inv.logit(C[,4]-2)
A[,9]=rbinom(n,size=1,p3)
beta=numeric(p)
beta[1:6]=c(0.1,0.2,0.5,-0.3,-.4,-0.5)
ct=c(0,beta)
#generating Y
Y=C\%*\%beta+rnorm(n)
C=cbind(C,Y)
B=C
B[A==1]=NA
Y=C\%*%beta+rnorm(n)
Y=C%*%beta+rnorm(n)
dim(C)
length(beta)
cor=0.6
prob=0.02
p=10
n=200 #sample size
Sigma=matrix(cor,p,p)#correlation of predictors
diag(Sigma)=1
mu=numeric(p)
set.seed(3)
#C is the complete design matrix without missing
C=mvrnorm(n,mu,Sigma)
#The missing indicator matrix
A<-matrix(rbinom(n*p,size=1,prob),n,p)
A[,c(1,4,6)]=0 #columns without missing
p1=inv.logit(C[,1]+C[,6]-2)
A[,5]=rbinom(n,size=1,p1) #Missing at Random
p2=inv.logit(-C[,1]-0.5*C[,6]-2)
A[,10]=rbinom(n,size=1,p2)
p3=inv.logit(C[,4]-2)
A[,9]=rbinom(n,size=1,p3)
beta=numeric(p+1)
beta[1:6]=c(0.1,0.2,0.5,-0.3,-.4,-0.5)
ct=c(0,beta)
dim(C)
dim(beta)
Y=C\%*\%beta+rnorm(n)
C=cbind(C,Y)
B=C
B[A==1]=NA
Y=C%*%beta+rnorm(n)
best<-threshold(B,Y,q2=p/2,m=3,thr=c(0.75,0.85))
fit<-mirl(B,Y,3,p/2,im=5)
#the column number for selected variables
select=which(fit$Probability>best)
library(MIRL)
library(MIRL)
library(MIRL)
library(MIRL)
library(MIRL)
library(MIRL)
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
library(MIRL)
source('~/Rcreation/MIRL/MIRL/R/ranlasforsim.R')
library(MIRL)
library(MIRL)
library(MIRL)
cor=0.6
prob=0.02
p=10
n=200 #sample size
Sigma=matrix(cor,p,p)#correlation of predictors
diag(Sigma)=1
mu=numeric(p)
set.seed(3)
#C is the complete design matrix without missing
C=mvrnorm(n,mu,Sigma)
#The missing indicator matrix
A<-matrix(rbinom(n*p,size=1,prob),n,p)
A[,c(1,4,6)]=0 #columns without missing
p1=inv.logit(C[,1]+C[,6]-2)
A[,5]=rbinom(n,size=1,p1) #Missing at Random
p2=inv.logit(-C[,1]-0.5*C[,6]-2)
A[,10]=rbinom(n,size=1,p2)
p3=inv.logit(C[,4]-2)
A[,9]=rbinom(n,size=1,p3)
beta=numeric(p)
beta[1:6]=c(0.1,0.2,0.5,-0.3,-.4,-0.5)*5
ct=c(0,beta)
#generating Y
Y=C\%*\%beta+rnorm(n)
B=C
B[A==1]=NA
Y=C%*%beta+rnorm(n)
library(MIRL)
fit<-mirl(B[1:25,],Y[1:25],p/2,im=1)
library(MIRL)
library(MIRL)
library(MIRL)
